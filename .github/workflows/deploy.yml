name: 🚀 Deploy React App to EC2 via Nginx

on:
  push:
    branches:
      - develop
      - test
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.ref_name == 'main' && 'production' || github.ref_name == 'test' && 'testing' || 'development' }}

    steps:
      - name: 🧾 Checkout Code (last 2 commits)
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # So we can compare with previous commit

      - name: 🧪 Compare Version in package.json
        id: version
        run: |
          CURRENT_VERSION=$(jq -r .version package.json)
          PREVIOUS_VERSION=$(git show HEAD~1:package.json | jq -r .version || echo "")

          echo "Current: $CURRENT_VERSION"
          echo "Previous: $PREVIOUS_VERSION"

          if [ "$CURRENT_VERSION" == "$PREVIOUS_VERSION" ]; then
            echo "No version change. Skipping deploy."
            echo "version_changed=false" >> $GITHUB_OUTPUT
          else
            echo "Version changed: $PREVIOUS_VERSION → $CURRENT_VERSION"
            echo "version_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: ❌ Stop if Version Didn't Change
        if: steps.version.outputs.version_changed != 'true'
        run: |
          echo "Skipping deployment because version did not change."
          exit 0

      - name: 🛠 Set Up Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: 🔐 Set up SSH
        run: |
          echo "Setting up SSH"
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY_B64 }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 📦 Build React App
        run: |
          npm install
          npm run build

      - name: 📤 Copy Build to EC2
        run: |
          scp -i ~/.ssh/id_rsa -r -o StrictHostKeyChecking=no dist/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/neuryde-fe/

      - name: 🔁 Reload Nginx on EC2
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo systemctl reload nginx"
